
Lab 4 Part 2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000272  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  00800100  00800100  000002e6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002e6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000318  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  00000358  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000919  00000000  00000000  00000390  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007e8  00000000  00000000  00000ca9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003e7  00000000  00000000  00001491  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000094  00000000  00000000  00001878  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000046e  00000000  00000000  0000190c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000106  00000000  00000000  00001d7a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00001e80  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4c c0       	rjmp	.+152    	; 0x9a <__ctors_end>
   2:	00 00       	nop
   4:	5a c0       	rjmp	.+180    	; 0xba <__bad_interrupt>
   6:	00 00       	nop
   8:	58 c0       	rjmp	.+176    	; 0xba <__bad_interrupt>
   a:	00 00       	nop
   c:	56 c0       	rjmp	.+172    	; 0xba <__bad_interrupt>
   e:	00 00       	nop
  10:	54 c0       	rjmp	.+168    	; 0xba <__bad_interrupt>
  12:	00 00       	nop
  14:	52 c0       	rjmp	.+164    	; 0xba <__bad_interrupt>
  16:	00 00       	nop
  18:	50 c0       	rjmp	.+160    	; 0xba <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4e c0       	rjmp	.+156    	; 0xba <__bad_interrupt>
  1e:	00 00       	nop
  20:	4c c0       	rjmp	.+152    	; 0xba <__bad_interrupt>
  22:	00 00       	nop
  24:	4a c0       	rjmp	.+148    	; 0xba <__bad_interrupt>
  26:	00 00       	nop
  28:	48 c0       	rjmp	.+144    	; 0xba <__bad_interrupt>
  2a:	00 00       	nop
  2c:	46 c0       	rjmp	.+140    	; 0xba <__bad_interrupt>
  2e:	00 00       	nop
  30:	44 c0       	rjmp	.+136    	; 0xba <__bad_interrupt>
  32:	00 00       	nop
  34:	42 c0       	rjmp	.+132    	; 0xba <__bad_interrupt>
  36:	00 00       	nop
  38:	40 c0       	rjmp	.+128    	; 0xba <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3e c0       	rjmp	.+124    	; 0xba <__bad_interrupt>
  3e:	00 00       	nop
  40:	3c c0       	rjmp	.+120    	; 0xba <__bad_interrupt>
  42:	00 00       	nop
  44:	3a c0       	rjmp	.+116    	; 0xba <__bad_interrupt>
  46:	00 00       	nop
  48:	38 c0       	rjmp	.+112    	; 0xba <__bad_interrupt>
  4a:	00 00       	nop
  4c:	36 c0       	rjmp	.+108    	; 0xba <__bad_interrupt>
  4e:	00 00       	nop
  50:	34 c0       	rjmp	.+104    	; 0xba <__bad_interrupt>
  52:	00 00       	nop
  54:	32 c0       	rjmp	.+100    	; 0xba <__bad_interrupt>
  56:	00 00       	nop
  58:	30 c0       	rjmp	.+96     	; 0xba <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2e c0       	rjmp	.+92     	; 0xba <__bad_interrupt>
  5e:	00 00       	nop
  60:	2c c0       	rjmp	.+88     	; 0xba <__bad_interrupt>
  62:	00 00       	nop
  64:	2a c0       	rjmp	.+84     	; 0xba <__bad_interrupt>
  66:	00 00       	nop
  68:	28 c0       	rjmp	.+80     	; 0xba <__bad_interrupt>
  6a:	00 00       	nop
  6c:	26 c0       	rjmp	.+76     	; 0xba <__bad_interrupt>
  6e:	00 00       	nop
  70:	24 c0       	rjmp	.+72     	; 0xba <__bad_interrupt>
  72:	00 00       	nop
  74:	22 c0       	rjmp	.+68     	; 0xba <__bad_interrupt>
  76:	00 00       	nop
  78:	20 c0       	rjmp	.+64     	; 0xba <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1e c0       	rjmp	.+60     	; 0xba <__bad_interrupt>
  7e:	00 00       	nop
  80:	1c c0       	rjmp	.+56     	; 0xba <__bad_interrupt>
  82:	00 00       	nop
  84:	1a c0       	rjmp	.+52     	; 0xba <__bad_interrupt>
  86:	00 00       	nop
  88:	18 c0       	rjmp	.+48     	; 0xba <__bad_interrupt>
  8a:	00 00       	nop
  8c:	78 00       	.word	0x0078	; ????
  8e:	7f 00       	.word	0x007f	; ????
  90:	a8 00       	.word	0x00a8	; ????
  92:	b9 00       	.word	0x00b9	; ????
  94:	ca 00       	.word	0x00ca	; ????
  96:	e2 00       	.word	0x00e2	; ????
  98:	fa 00       	.word	0x00fa	; ????

0000009a <__ctors_end>:
  9a:	11 24       	eor	r1, r1
  9c:	1f be       	out	0x3f, r1	; 63
  9e:	cf ef       	ldi	r28, 0xFF	; 255
  a0:	d0 e4       	ldi	r29, 0x40	; 64
  a2:	de bf       	out	0x3e, r29	; 62
  a4:	cd bf       	out	0x3d, r28	; 61

000000a6 <__do_clear_bss>:
  a6:	21 e0       	ldi	r18, 0x01	; 1
  a8:	a0 e0       	ldi	r26, 0x00	; 0
  aa:	b1 e0       	ldi	r27, 0x01	; 1
  ac:	01 c0       	rjmp	.+2      	; 0xb0 <.do_clear_bss_start>

000000ae <.do_clear_bss_loop>:
  ae:	1d 92       	st	X+, r1

000000b0 <.do_clear_bss_start>:
  b0:	a3 30       	cpi	r26, 0x03	; 3
  b2:	b2 07       	cpc	r27, r18
  b4:	e1 f7       	brne	.-8      	; 0xae <.do_clear_bss_loop>
  b6:	ab d0       	rcall	.+342    	; 0x20e <main>
  b8:	da c0       	rjmp	.+436    	; 0x26e <_exit>

000000ba <__bad_interrupt>:
  ba:	a2 cf       	rjmp	.-188    	; 0x0 <__vectors>

000000bc <Tick_Buttons>:
unsigned char SetBit(unsigned char x, unsigned char k, unsigned char b) {
	return (b ? x | (0x01 << k) : x & ~(0x01 << k));
}
unsigned char GetBit(unsigned char x, unsigned char k) {
	return ((x & (0x01 << k)) != 0);
}
  bc:	cf 93       	push	r28
  be:	df 93       	push	r29
  c0:	cd b7       	in	r28, 0x3d	; 61
  c2:	de b7       	in	r29, 0x3e	; 62
  c4:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <Buttons>
  c8:	88 2f       	mov	r24, r24
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	09 2e       	mov	r0, r25
  ce:	00 0c       	add	r0, r0
  d0:	aa 0b       	sbc	r26, r26
  d2:	bb 0b       	sbc	r27, r27
  d4:	40 e0       	ldi	r20, 0x00	; 0
  d6:	50 e0       	ldi	r21, 0x00	; 0
  d8:	26 e0       	ldi	r18, 0x06	; 6
  da:	30 e0       	ldi	r19, 0x00	; 0
  dc:	84 1b       	sub	r24, r20
  de:	95 0b       	sbc	r25, r21
  e0:	28 17       	cp	r18, r24
  e2:	39 07       	cpc	r19, r25
  e4:	08 f4       	brcc	.+2      	; 0xe8 <Tick_Buttons+0x2c>
  e6:	8c c0       	rjmp	.+280    	; 0x200 <Tick_Buttons+0x144>
  e8:	8a 5b       	subi	r24, 0xBA	; 186
  ea:	9f 4f       	sbci	r25, 0xFF	; 255
  ec:	fc 01       	movw	r30, r24
  ee:	b6 c0       	rjmp	.+364    	; 0x25c <__tablejump2__>
  f0:	87 e0       	ldi	r24, 0x07	; 7
  f2:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <temp_c>
  f6:	81 e0       	ldi	r24, 0x01	; 1
  f8:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <Buttons>
  fc:	84 c0       	rjmp	.+264    	; 0x206 <Tick_Buttons+0x14a>
  fe:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <temp_c>
 102:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <temp_c>
 106:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 10a:	81 30       	cpi	r24, 0x01	; 1
 10c:	41 f4       	brne	.+16     	; 0x11e <Tick_Buttons+0x62>
 10e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <temp_c>
 112:	89 30       	cpi	r24, 0x09	; 9
 114:	20 f4       	brcc	.+8      	; 0x11e <Tick_Buttons+0x62>
 116:	83 e0       	ldi	r24, 0x03	; 3
 118:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <Buttons>
 11c:	18 c0       	rjmp	.+48     	; 0x14e <Tick_Buttons+0x92>
 11e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 122:	82 30       	cpi	r24, 0x02	; 2
 124:	41 f4       	brne	.+16     	; 0x136 <Tick_Buttons+0x7a>
 126:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <temp_c>
 12a:	88 23       	and	r24, r24
 12c:	21 f0       	breq	.+8      	; 0x136 <Tick_Buttons+0x7a>
 12e:	82 e0       	ldi	r24, 0x02	; 2
 130:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <Buttons>
 134:	0c c0       	rjmp	.+24     	; 0x14e <Tick_Buttons+0x92>
 136:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 13a:	83 30       	cpi	r24, 0x03	; 3
 13c:	21 f4       	brne	.+8      	; 0x146 <Tick_Buttons+0x8a>
 13e:	86 e0       	ldi	r24, 0x06	; 6
 140:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <Buttons>
 144:	60 c0       	rjmp	.+192    	; 0x206 <Tick_Buttons+0x14a>
 146:	81 e0       	ldi	r24, 0x01	; 1
 148:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <Buttons>
 14c:	5c c0       	rjmp	.+184    	; 0x206 <Tick_Buttons+0x14a>
 14e:	5b c0       	rjmp	.+182    	; 0x206 <Tick_Buttons+0x14a>
 150:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <temp_c>
 154:	81 50       	subi	r24, 0x01	; 1
 156:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <temp_c>
 15a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 15e:	83 30       	cpi	r24, 0x03	; 3
 160:	21 f4       	brne	.+8      	; 0x16a <Tick_Buttons+0xae>
 162:	86 e0       	ldi	r24, 0x06	; 6
 164:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <Buttons>
 168:	4e c0       	rjmp	.+156    	; 0x206 <Tick_Buttons+0x14a>
 16a:	85 e0       	ldi	r24, 0x05	; 5
 16c:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <Buttons>
 170:	4a c0       	rjmp	.+148    	; 0x206 <Tick_Buttons+0x14a>
 172:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <temp_c>
 176:	8f 5f       	subi	r24, 0xFF	; 255
 178:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <temp_c>
 17c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 180:	83 30       	cpi	r24, 0x03	; 3
 182:	21 f4       	brne	.+8      	; 0x18c <Tick_Buttons+0xd0>
 184:	86 e0       	ldi	r24, 0x06	; 6
 186:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <Buttons>
 18a:	3d c0       	rjmp	.+122    	; 0x206 <Tick_Buttons+0x14a>
 18c:	84 e0       	ldi	r24, 0x04	; 4
 18e:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <Buttons>
 192:	39 c0       	rjmp	.+114    	; 0x206 <Tick_Buttons+0x14a>
 194:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <temp_c>
 198:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <temp_c>
 19c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 1a0:	83 30       	cpi	r24, 0x03	; 3
 1a2:	21 f4       	brne	.+8      	; 0x1ac <Tick_Buttons+0xf0>
 1a4:	86 e0       	ldi	r24, 0x06	; 6
 1a6:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <Buttons>
 1aa:	2d c0       	rjmp	.+90     	; 0x206 <Tick_Buttons+0x14a>
 1ac:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 1b0:	81 30       	cpi	r24, 0x01	; 1
 1b2:	21 f4       	brne	.+8      	; 0x1bc <Tick_Buttons+0x100>
 1b4:	84 e0       	ldi	r24, 0x04	; 4
 1b6:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <Buttons>
 1ba:	25 c0       	rjmp	.+74     	; 0x206 <Tick_Buttons+0x14a>
 1bc:	81 e0       	ldi	r24, 0x01	; 1
 1be:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <Buttons>
 1c2:	21 c0       	rjmp	.+66     	; 0x206 <Tick_Buttons+0x14a>
 1c4:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <temp_c>
 1c8:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <temp_c>
 1cc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 1d0:	83 30       	cpi	r24, 0x03	; 3
 1d2:	21 f4       	brne	.+8      	; 0x1dc <Tick_Buttons+0x120>
 1d4:	86 e0       	ldi	r24, 0x06	; 6
 1d6:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <Buttons>
 1da:	15 c0       	rjmp	.+42     	; 0x206 <Tick_Buttons+0x14a>
 1dc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 1e0:	82 30       	cpi	r24, 0x02	; 2
 1e2:	21 f4       	brne	.+8      	; 0x1ec <Tick_Buttons+0x130>
 1e4:	85 e0       	ldi	r24, 0x05	; 5
 1e6:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <Buttons>
 1ea:	0d c0       	rjmp	.+26     	; 0x206 <Tick_Buttons+0x14a>
 1ec:	81 e0       	ldi	r24, 0x01	; 1
 1ee:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <Buttons>
 1f2:	09 c0       	rjmp	.+18     	; 0x206 <Tick_Buttons+0x14a>
 1f4:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <temp_c>
 1f8:	81 e0       	ldi	r24, 0x01	; 1
 1fa:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <Buttons>
 1fe:	03 c0       	rjmp	.+6      	; 0x206 <Tick_Buttons+0x14a>
 200:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <Buttons>
 204:	00 00       	nop
 206:	00 00       	nop
 208:	df 91       	pop	r29
 20a:	cf 91       	pop	r28
 20c:	08 95       	ret

0000020e <main>:

int main(void)
{
 20e:	cf 93       	push	r28
 210:	df 93       	push	r29
 212:	cd b7       	in	r28, 0x3d	; 61
 214:	de b7       	in	r29, 0x3e	; 62
    DDRA = 0x00; PORTA = 0xFF; // Configure port A's 8 pins as inputs
 216:	81 e2       	ldi	r24, 0x21	; 33
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	fc 01       	movw	r30, r24
 21c:	10 82       	st	Z, r1
 21e:	82 e2       	ldi	r24, 0x22	; 34
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	2f ef       	ldi	r18, 0xFF	; 255
 224:	fc 01       	movw	r30, r24
 226:	20 83       	st	Z, r18
    DDRC = 0xFF; PORTC = 0x00; // Configure port C's 8 pins as outputs
 228:	87 e2       	ldi	r24, 0x27	; 39
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	2f ef       	ldi	r18, 0xFF	; 255
 22e:	fc 01       	movw	r30, r24
 230:	20 83       	st	Z, r18
 232:	88 e2       	ldi	r24, 0x28	; 40
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	fc 01       	movw	r30, r24
 238:	10 82       	st	Z, r1
	Buttons = initalize;
 23a:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <Buttons>
	
    while (1) 
    {
		temp_a = PINA & 0x03; 
 23e:	80 e2       	ldi	r24, 0x20	; 32
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	fc 01       	movw	r30, r24
 244:	80 81       	ld	r24, Z
 246:	83 70       	andi	r24, 0x03	; 3
 248:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
		Tick_Buttons();
 24c:	37 df       	rcall	.-402    	; 0xbc <Tick_Buttons>
		PORTC = temp_c;
 24e:	88 e2       	ldi	r24, 0x28	; 40
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <temp_c>
 256:	fc 01       	movw	r30, r24
 258:	20 83       	st	Z, r18
    }
 25a:	f1 cf       	rjmp	.-30     	; 0x23e <main+0x30>

0000025c <__tablejump2__>:
 25c:	ee 0f       	add	r30, r30
 25e:	ff 1f       	adc	r31, r31
 260:	00 24       	eor	r0, r0
 262:	00 1c       	adc	r0, r0
 264:	0b be       	out	0x3b, r0	; 59
 266:	07 90       	elpm	r0, Z+
 268:	f6 91       	elpm	r31, Z
 26a:	e0 2d       	mov	r30, r0
 26c:	09 94       	ijmp

0000026e <_exit>:
 26e:	f8 94       	cli

00000270 <__stop_program>:
 270:	ff cf       	rjmp	.-2      	; 0x270 <__stop_program>
