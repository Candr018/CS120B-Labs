
Lab 4 Part 3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000366  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002f2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  00800100  00800100  00000366  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000366  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000398  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  000003d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000008a5  00000000  00000000  00000400  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007c6  00000000  00000000  00000ca5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000489  00000000  00000000  0000146b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000054  00000000  00000000  000018f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000425  00000000  00000000  00001948  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000076  00000000  00000000  00001d6d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  00001de3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4d c0       	rjmp	.+154    	; 0x9c <__ctors_end>
   2:	00 00       	nop
   4:	5b c0       	rjmp	.+182    	; 0xbc <__bad_interrupt>
   6:	00 00       	nop
   8:	59 c0       	rjmp	.+178    	; 0xbc <__bad_interrupt>
   a:	00 00       	nop
   c:	57 c0       	rjmp	.+174    	; 0xbc <__bad_interrupt>
   e:	00 00       	nop
  10:	55 c0       	rjmp	.+170    	; 0xbc <__bad_interrupt>
  12:	00 00       	nop
  14:	53 c0       	rjmp	.+166    	; 0xbc <__bad_interrupt>
  16:	00 00       	nop
  18:	51 c0       	rjmp	.+162    	; 0xbc <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4f c0       	rjmp	.+158    	; 0xbc <__bad_interrupt>
  1e:	00 00       	nop
  20:	4d c0       	rjmp	.+154    	; 0xbc <__bad_interrupt>
  22:	00 00       	nop
  24:	4b c0       	rjmp	.+150    	; 0xbc <__bad_interrupt>
  26:	00 00       	nop
  28:	49 c0       	rjmp	.+146    	; 0xbc <__bad_interrupt>
  2a:	00 00       	nop
  2c:	47 c0       	rjmp	.+142    	; 0xbc <__bad_interrupt>
  2e:	00 00       	nop
  30:	45 c0       	rjmp	.+138    	; 0xbc <__bad_interrupt>
  32:	00 00       	nop
  34:	43 c0       	rjmp	.+134    	; 0xbc <__bad_interrupt>
  36:	00 00       	nop
  38:	41 c0       	rjmp	.+130    	; 0xbc <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3f c0       	rjmp	.+126    	; 0xbc <__bad_interrupt>
  3e:	00 00       	nop
  40:	3d c0       	rjmp	.+122    	; 0xbc <__bad_interrupt>
  42:	00 00       	nop
  44:	3b c0       	rjmp	.+118    	; 0xbc <__bad_interrupt>
  46:	00 00       	nop
  48:	39 c0       	rjmp	.+114    	; 0xbc <__bad_interrupt>
  4a:	00 00       	nop
  4c:	37 c0       	rjmp	.+110    	; 0xbc <__bad_interrupt>
  4e:	00 00       	nop
  50:	35 c0       	rjmp	.+106    	; 0xbc <__bad_interrupt>
  52:	00 00       	nop
  54:	33 c0       	rjmp	.+102    	; 0xbc <__bad_interrupt>
  56:	00 00       	nop
  58:	31 c0       	rjmp	.+98     	; 0xbc <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2f c0       	rjmp	.+94     	; 0xbc <__bad_interrupt>
  5e:	00 00       	nop
  60:	2d c0       	rjmp	.+90     	; 0xbc <__bad_interrupt>
  62:	00 00       	nop
  64:	2b c0       	rjmp	.+86     	; 0xbc <__bad_interrupt>
  66:	00 00       	nop
  68:	29 c0       	rjmp	.+82     	; 0xbc <__bad_interrupt>
  6a:	00 00       	nop
  6c:	27 c0       	rjmp	.+78     	; 0xbc <__bad_interrupt>
  6e:	00 00       	nop
  70:	25 c0       	rjmp	.+74     	; 0xbc <__bad_interrupt>
  72:	00 00       	nop
  74:	23 c0       	rjmp	.+70     	; 0xbc <__bad_interrupt>
  76:	00 00       	nop
  78:	21 c0       	rjmp	.+66     	; 0xbc <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1f c0       	rjmp	.+62     	; 0xbc <__bad_interrupt>
  7e:	00 00       	nop
  80:	1d c0       	rjmp	.+58     	; 0xbc <__bad_interrupt>
  82:	00 00       	nop
  84:	1b c0       	rjmp	.+54     	; 0xbc <__bad_interrupt>
  86:	00 00       	nop
  88:	19 c0       	rjmp	.+50     	; 0xbc <__bad_interrupt>
  8a:	00 00       	nop
  8c:	79 00       	.word	0x0079	; ????
  8e:	7f 00       	.word	0x007f	; ????
  90:	8b 00       	.word	0x008b	; ????
  92:	97 00       	.word	0x0097	; ????
  94:	ad 00       	.word	0x00ad	; ????
  96:	b4 00       	.word	0x00b4	; ????
  98:	e3 00       	.word	0x00e3	; ????
  9a:	12 01       	movw	r2, r4

0000009c <__ctors_end>:
  9c:	11 24       	eor	r1, r1
  9e:	1f be       	out	0x3f, r1	; 63
  a0:	cf ef       	ldi	r28, 0xFF	; 255
  a2:	d0 e4       	ldi	r29, 0x40	; 64
  a4:	de bf       	out	0x3e, r29	; 62
  a6:	cd bf       	out	0x3d, r28	; 61

000000a8 <__do_clear_bss>:
  a8:	21 e0       	ldi	r18, 0x01	; 1
  aa:	a0 e0       	ldi	r26, 0x00	; 0
  ac:	b1 e0       	ldi	r27, 0x01	; 1
  ae:	01 c0       	rjmp	.+2      	; 0xb2 <.do_clear_bss_start>

000000b0 <.do_clear_bss_loop>:
  b0:	1d 92       	st	X+, r1

000000b2 <.do_clear_bss_start>:
  b2:	a3 30       	cpi	r26, 0x03	; 3
  b4:	b2 07       	cpc	r27, r18
  b6:	e1 f7       	brne	.-8      	; 0xb0 <.do_clear_bss_loop>
  b8:	ea d0       	rcall	.+468    	; 0x28e <main>
  ba:	19 c1       	rjmp	.+562    	; 0x2ee <_exit>

000000bc <__bad_interrupt>:
  bc:	a1 cf       	rjmp	.-190    	; 0x0 <__vectors>

000000be <Tick_Keypad>:
enum State_Machine {one, two, three, four, five, six, seven, eight} Keypad;
unsigned char temp_a;
unsigned char temp_b;
	
void Tick_Keypad()
{
  be:	cf 93       	push	r28
  c0:	df 93       	push	r29
  c2:	cd b7       	in	r28, 0x3d	; 61
  c4:	de b7       	in	r29, 0x3e	; 62
	switch(Keypad)
  c6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <Keypad>
  ca:	88 2f       	mov	r24, r24
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	09 2e       	mov	r0, r25
  d0:	00 0c       	add	r0, r0
  d2:	aa 0b       	sbc	r26, r26
  d4:	bb 0b       	sbc	r27, r27
  d6:	40 e0       	ldi	r20, 0x00	; 0
  d8:	50 e0       	ldi	r21, 0x00	; 0
  da:	27 e0       	ldi	r18, 0x07	; 7
  dc:	30 e0       	ldi	r19, 0x00	; 0
  de:	84 1b       	sub	r24, r20
  e0:	95 0b       	sbc	r25, r21
  e2:	28 17       	cp	r18, r24
  e4:	39 07       	cpc	r19, r25
  e6:	08 f4       	brcc	.+2      	; 0xea <Tick_Keypad+0x2c>
  e8:	cb c0       	rjmp	.+406    	; 0x280 <Tick_Keypad+0x1c2>
  ea:	8a 5b       	subi	r24, 0xBA	; 186
  ec:	9f 4f       	sbci	r25, 0xFF	; 255
  ee:	fc 01       	movw	r30, r24
  f0:	f5 c0       	rjmp	.+490    	; 0x2dc <__tablejump2__>
	{
		//case 1
		case one:
			temp_b = 0x00;
  f2:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <temp_b>
			Keypad = two;
  f6:	81 e0       	ldi	r24, 0x01	; 1
  f8:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Keypad>
		break; 
  fc:	c4 c0       	rjmp	.+392    	; 0x286 <Tick_Keypad+0x1c8>
		
		//case 2 -- only works if you are only pressing the # (A3) button
		//multiple buttons being pressed at the same time will not work
		case two:
			temp_b = 0x00;
  fe:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <temp_b>
			Keypad = temp_a == 0x04 ? three:two;
 102:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 106:	84 30       	cpi	r24, 0x04	; 4
 108:	11 f4       	brne	.+4      	; 0x10e <Tick_Keypad+0x50>
 10a:	82 e0       	ldi	r24, 0x02	; 2
 10c:	01 c0       	rjmp	.+2      	; 0x110 <Tick_Keypad+0x52>
 10e:	81 e0       	ldi	r24, 0x01	; 1
 110:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Keypad>
		break;
 114:	b8 c0       	rjmp	.+368    	; 0x286 <Tick_Keypad+0x1c8>
		
		//case 3 -- only works if you stop pressing # (A3) button along with
		//all other buttons
		case three:
			temp_b = 0x00;
 116:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <temp_b>
			Keypad = temp_a == 0x00 ? four:three;
 11a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 11e:	88 23       	and	r24, r24
 120:	11 f4       	brne	.+4      	; 0x126 <Tick_Keypad+0x68>
 122:	83 e0       	ldi	r24, 0x03	; 3
 124:	01 c0       	rjmp	.+2      	; 0x128 <Tick_Keypad+0x6a>
 126:	82 e0       	ldi	r24, 0x02	; 2
 128:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Keypad>
		break;
 12c:	ac c0       	rjmp	.+344    	; 0x286 <Tick_Keypad+0x1c8>
		
		//case 4 -- resets if Y (A1) is not pressed
		case four:
			temp_b = 0x00;
 12e:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <temp_b>
			if(temp_a == 0x02)
 132:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 136:	82 30       	cpi	r24, 0x02	; 2
 138:	21 f4       	brne	.+8      	; 0x142 <Tick_Keypad+0x84>
			{
				Keypad = five;
 13a:	84 e0       	ldi	r24, 0x04	; 4
 13c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Keypad>
			}
			else
			{
				Keypad = two;
			}
		break;
 140:	a2 c0       	rjmp	.+324    	; 0x286 <Tick_Keypad+0x1c8>
			temp_b = 0x00;
			if(temp_a == 0x02)
			{
				Keypad = five;
			}
			else if(temp_a == 0X00)
 142:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 146:	88 23       	and	r24, r24
 148:	21 f4       	brne	.+8      	; 0x152 <Tick_Keypad+0x94>
			{
				Keypad = four;
 14a:	83 e0       	ldi	r24, 0x03	; 3
 14c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Keypad>
			}
			else
			{
				Keypad = two;
			}
		break;
 150:	9a c0       	rjmp	.+308    	; 0x286 <Tick_Keypad+0x1c8>
			{
				Keypad = four;
			}
			else
			{
				Keypad = two;
 152:	81 e0       	ldi	r24, 0x01	; 1
 154:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Keypad>
			}
		break;
 158:	96 c0       	rjmp	.+300    	; 0x286 <Tick_Keypad+0x1c8>
		
		//case 5 -- door unlocked
		//door only locks if the lock button (A7) if pressed without other inputs
		case five:
			temp_b = 0x01;
 15a:	81 e0       	ldi	r24, 0x01	; 1
 15c:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <temp_b>
			Keypad = six;
 160:	85 e0       	ldi	r24, 0x05	; 5
 162:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Keypad>
		break;
 166:	8f c0       	rjmp	.+286    	; 0x286 <Tick_Keypad+0x1c8>
		
		//case 6
		case six:
			temp_b = 0x01;
 168:	81 e0       	ldi	r24, 0x01	; 1
 16a:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <temp_b>
			if(temp_a == 0x70 || temp_a == 0x71 || temp_a == 0x72 || temp_a == 0x73 || temp_a == 0x75 || temp_a == 0x76 || temp_a == 0x77)
 16e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 172:	80 37       	cpi	r24, 0x70	; 112
 174:	c1 f0       	breq	.+48     	; 0x1a6 <Tick_Keypad+0xe8>
 176:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 17a:	81 37       	cpi	r24, 0x71	; 113
 17c:	a1 f0       	breq	.+40     	; 0x1a6 <Tick_Keypad+0xe8>
 17e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 182:	82 37       	cpi	r24, 0x72	; 114
 184:	81 f0       	breq	.+32     	; 0x1a6 <Tick_Keypad+0xe8>
 186:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 18a:	83 37       	cpi	r24, 0x73	; 115
 18c:	61 f0       	breq	.+24     	; 0x1a6 <Tick_Keypad+0xe8>
 18e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 192:	85 37       	cpi	r24, 0x75	; 117
 194:	41 f0       	breq	.+16     	; 0x1a6 <Tick_Keypad+0xe8>
 196:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 19a:	86 37       	cpi	r24, 0x76	; 118
 19c:	21 f0       	breq	.+8      	; 0x1a6 <Tick_Keypad+0xe8>
 19e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 1a2:	87 37       	cpi	r24, 0x77	; 119
 1a4:	21 f4       	brne	.+8      	; 0x1ae <Tick_Keypad+0xf0>
			{
				Keypad = two;
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Keypad>
			}
			else
			{
				Keypad = six;
			}
		break;
 1ac:	6c c0       	rjmp	.+216    	; 0x286 <Tick_Keypad+0x1c8>
			temp_b = 0x01;
			if(temp_a == 0x70 || temp_a == 0x71 || temp_a == 0x72 || temp_a == 0x73 || temp_a == 0x75 || temp_a == 0x76 || temp_a == 0x77)
			{
				Keypad = two;
			}
			else if(temp_a == 0x04)
 1ae:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 1b2:	84 30       	cpi	r24, 0x04	; 4
 1b4:	21 f4       	brne	.+8      	; 0x1be <Tick_Keypad+0x100>
			{
				Keypad = seven;
 1b6:	86 e0       	ldi	r24, 0x06	; 6
 1b8:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Keypad>
			}
			else
			{
				Keypad = six;
			}
		break;
 1bc:	64 c0       	rjmp	.+200    	; 0x286 <Tick_Keypad+0x1c8>
			{
				Keypad = seven;
			}
			else
			{
				Keypad = six;
 1be:	85 e0       	ldi	r24, 0x05	; 5
 1c0:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Keypad>
			}
		break;
 1c4:	60 c0       	rjmp	.+192    	; 0x286 <Tick_Keypad+0x1c8>
		
		//case 7
		case seven:
			temp_b = 0x01;
 1c6:	81 e0       	ldi	r24, 0x01	; 1
 1c8:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <temp_b>
			if(temp_a == 0x70 || temp_a == 0x71 || temp_a == 0x72 || temp_a == 0x73 || temp_a == 0x75 || temp_a == 0x76 || temp_a == 0x77)
 1cc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 1d0:	80 37       	cpi	r24, 0x70	; 112
 1d2:	c1 f0       	breq	.+48     	; 0x204 <Tick_Keypad+0x146>
 1d4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 1d8:	81 37       	cpi	r24, 0x71	; 113
 1da:	a1 f0       	breq	.+40     	; 0x204 <Tick_Keypad+0x146>
 1dc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 1e0:	82 37       	cpi	r24, 0x72	; 114
 1e2:	81 f0       	breq	.+32     	; 0x204 <Tick_Keypad+0x146>
 1e4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 1e8:	83 37       	cpi	r24, 0x73	; 115
 1ea:	61 f0       	breq	.+24     	; 0x204 <Tick_Keypad+0x146>
 1ec:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 1f0:	85 37       	cpi	r24, 0x75	; 117
 1f2:	41 f0       	breq	.+16     	; 0x204 <Tick_Keypad+0x146>
 1f4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 1f8:	86 37       	cpi	r24, 0x76	; 118
 1fa:	21 f0       	breq	.+8      	; 0x204 <Tick_Keypad+0x146>
 1fc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 200:	87 37       	cpi	r24, 0x77	; 119
 202:	21 f4       	brne	.+8      	; 0x20c <Tick_Keypad+0x14e>
			{
				Keypad = two;
 204:	81 e0       	ldi	r24, 0x01	; 1
 206:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Keypad>
			}
			else
			{
				Keypad = seven;
			}
		break;
 20a:	3d c0       	rjmp	.+122    	; 0x286 <Tick_Keypad+0x1c8>
			temp_b = 0x01;
			if(temp_a == 0x70 || temp_a == 0x71 || temp_a == 0x72 || temp_a == 0x73 || temp_a == 0x75 || temp_a == 0x76 || temp_a == 0x77)
			{
				Keypad = two;
			}
			else if(temp_a == 0x00)
 20c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 210:	88 23       	and	r24, r24
 212:	21 f4       	brne	.+8      	; 0x21c <Tick_Keypad+0x15e>
			{
				Keypad = eight;
 214:	87 e0       	ldi	r24, 0x07	; 7
 216:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Keypad>
			}
			else
			{
				Keypad = seven;
			}
		break;
 21a:	35 c0       	rjmp	.+106    	; 0x286 <Tick_Keypad+0x1c8>
			{
				Keypad = eight;
			}
			else
			{
				Keypad = seven;
 21c:	86 e0       	ldi	r24, 0x06	; 6
 21e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Keypad>
			}
		break;
 222:	31 c0       	rjmp	.+98     	; 0x286 <Tick_Keypad+0x1c8>
		
		//case 8
		case eight:
			temp_b = 0x01;
 224:	81 e0       	ldi	r24, 0x01	; 1
 226:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <temp_b>
			if(temp_a == 0x70 || temp_a == 0x71 || temp_a == 0x72 || temp_a == 0x73 || temp_a == 0x75 || temp_a == 0x76 || temp_a == 0x77)
 22a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 22e:	80 37       	cpi	r24, 0x70	; 112
 230:	c1 f0       	breq	.+48     	; 0x262 <Tick_Keypad+0x1a4>
 232:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 236:	81 37       	cpi	r24, 0x71	; 113
 238:	a1 f0       	breq	.+40     	; 0x262 <Tick_Keypad+0x1a4>
 23a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 23e:	82 37       	cpi	r24, 0x72	; 114
 240:	81 f0       	breq	.+32     	; 0x262 <Tick_Keypad+0x1a4>
 242:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 246:	83 37       	cpi	r24, 0x73	; 115
 248:	61 f0       	breq	.+24     	; 0x262 <Tick_Keypad+0x1a4>
 24a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 24e:	85 37       	cpi	r24, 0x75	; 117
 250:	41 f0       	breq	.+16     	; 0x262 <Tick_Keypad+0x1a4>
 252:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 256:	86 37       	cpi	r24, 0x76	; 118
 258:	21 f0       	breq	.+8      	; 0x262 <Tick_Keypad+0x1a4>
 25a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 25e:	87 37       	cpi	r24, 0x77	; 119
 260:	21 f4       	brne	.+8      	; 0x26a <Tick_Keypad+0x1ac>
			{
				Keypad = two;
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Keypad>
			}
			else
			{
				Keypad = eight;
			}
		break;
 268:	0e c0       	rjmp	.+28     	; 0x286 <Tick_Keypad+0x1c8>
			temp_b = 0x01;
			if(temp_a == 0x70 || temp_a == 0x71 || temp_a == 0x72 || temp_a == 0x73 || temp_a == 0x75 || temp_a == 0x76 || temp_a == 0x77)
			{
				Keypad = two;
			}
			else if(temp_a == 0x02)
 26a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 26e:	82 30       	cpi	r24, 0x02	; 2
 270:	19 f4       	brne	.+6      	; 0x278 <Tick_Keypad+0x1ba>
			{
				Keypad = one;
 272:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <Keypad>
			}
			else
			{
				Keypad = eight;
			}
		break;
 276:	07 c0       	rjmp	.+14     	; 0x286 <Tick_Keypad+0x1c8>
			{
				Keypad = one;
			}
			else
			{
				Keypad = eight;
 278:	87 e0       	ldi	r24, 0x07	; 7
 27a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Keypad>
			}
		break;
 27e:	03 c0       	rjmp	.+6      	; 0x286 <Tick_Keypad+0x1c8>
		
		default:
			Keypad = one;
 280:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <Keypad>
			break;
 284:	00 00       	nop
	}
}
 286:	00 00       	nop
 288:	df 91       	pop	r29
 28a:	cf 91       	pop	r28
 28c:	08 95       	ret

0000028e <main>:

int main(void)
{
 28e:	cf 93       	push	r28
 290:	df 93       	push	r29
 292:	cd b7       	in	r28, 0x3d	; 61
 294:	de b7       	in	r29, 0x3e	; 62
    DDRA = 0x00; PORTA = 0xFF; // Configure port A's 8 pins as inputs
 296:	81 e2       	ldi	r24, 0x21	; 33
 298:	90 e0       	ldi	r25, 0x00	; 0
 29a:	fc 01       	movw	r30, r24
 29c:	10 82       	st	Z, r1
 29e:	82 e2       	ldi	r24, 0x22	; 34
 2a0:	90 e0       	ldi	r25, 0x00	; 0
 2a2:	2f ef       	ldi	r18, 0xFF	; 255
 2a4:	fc 01       	movw	r30, r24
 2a6:	20 83       	st	Z, r18
    DDRB = 0xFF; PORTB = 0x00; // Configure port C's 8 pins as outputs
 2a8:	84 e2       	ldi	r24, 0x24	; 36
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	2f ef       	ldi	r18, 0xFF	; 255
 2ae:	fc 01       	movw	r30, r24
 2b0:	20 83       	st	Z, r18
 2b2:	85 e2       	ldi	r24, 0x25	; 37
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	fc 01       	movw	r30, r24
 2b8:	10 82       	st	Z, r1
	Keypad = one;
 2ba:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <Keypad>
	
    while (1) 
    {
		temp_a = PINA & 0x87; 
 2be:	80 e2       	ldi	r24, 0x20	; 32
 2c0:	90 e0       	ldi	r25, 0x00	; 0
 2c2:	fc 01       	movw	r30, r24
 2c4:	80 81       	ld	r24, Z
 2c6:	87 78       	andi	r24, 0x87	; 135
 2c8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
		Tick_Keypad();
 2cc:	f8 de       	rcall	.-528    	; 0xbe <Tick_Keypad>
		PORTB = temp_b;
 2ce:	85 e2       	ldi	r24, 0x25	; 37
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <temp_b>
 2d6:	fc 01       	movw	r30, r24
 2d8:	20 83       	st	Z, r18
    }
 2da:	f1 cf       	rjmp	.-30     	; 0x2be <main+0x30>

000002dc <__tablejump2__>:
 2dc:	ee 0f       	add	r30, r30
 2de:	ff 1f       	adc	r31, r31
 2e0:	00 24       	eor	r0, r0
 2e2:	00 1c       	adc	r0, r0
 2e4:	0b be       	out	0x3b, r0	; 59
 2e6:	07 90       	elpm	r0, Z+
 2e8:	f6 91       	elpm	r31, Z
 2ea:	e0 2d       	mov	r30, r0
 2ec:	09 94       	ijmp

000002ee <_exit>:
 2ee:	f8 94       	cli

000002f0 <__stop_program>:
 2f0:	ff cf       	rjmp	.-2      	; 0x2f0 <__stop_program>
